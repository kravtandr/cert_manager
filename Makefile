.PHONY: help lint format check test clean install

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PYTHON = python3
PIP = pip3
SRC_DIR = src
VENV = .venv

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-15s\033[0m %s\n", $$1, $$2}'

install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	$(PIP) install -r requirements.txt

lint: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ª–∏–Ω—Ç–µ—Ä—ã
	@echo "üîç –ó–∞–ø—É—Å–∫ flake8..."
	flake8 $(SRC_DIR)
	@echo "üîç –ó–∞–ø—É—Å–∫ mypy..."
	mypy $(SRC_DIR)
	@echo "‚úÖ –õ–∏–Ω—Ç–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω!"

format: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
	@echo "üé® –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ —Å isort..."
	isort $(SRC_DIR)
	@echo "üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å black..."
	black $(SRC_DIR)
	@echo "‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"

format-check: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏–º–ø–æ—Ä—Ç–æ–≤..."
	isort --check-only $(SRC_DIR)
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..."
	black --check $(SRC_DIR)
	@echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

check: format-check lint ## –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞
	@echo "üéØ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!"

fix: format lint ## –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥
	@echo "üõ†Ô∏è –ö–æ–¥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω!"

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
	PYTHONPATH=. pytest

test-unit: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ unit —Ç–µ—Å—Ç—ã
	@echo "üß™ –ó–∞–ø—É—Å–∫ unit —Ç–µ—Å—Ç–æ–≤..."
	PYTHONPATH=. pytest tests/unit/ -v

test-integration: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
	@echo "üß™ –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤..."
	PYTHONPATH=. pytest tests/integration/ -v -m integration

test-api: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ API —Ç–µ—Å—Ç—ã
	@echo "üß™ –ó–∞–ø—É—Å–∫ API —Ç–µ—Å—Ç–æ–≤..."
	PYTHONPATH=. pytest tests/api/ -v -m api

test-coverage: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã —Å coverage
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å coverage..."
	PYTHONPATH=. pytest --cov=src --cov-report=html --cov-report=term-missing
	@echo "üìä Coverage –æ—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω –≤ htmlcov/"

test-slow: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–µ–¥–ª–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
	@echo "üß™ –ó–∞–ø—É—Å–∫ –º–µ–¥–ª–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤..."
	PYTHONPATH=. pytest -v -m slow

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
	find . -type f -name "*.pyc" -delete
	find . -type d -name "__pycache__" -delete
	find . -type d -name ".mypy_cache" -delete
	find . -type d -name ".pytest_cache" -delete
	find . -type d -name "htmlcov" -exec rm -rf {} + 2>/dev/null || true
	find . -name "coverage.xml" -delete
	find . -name ".coverage" -delete
	@echo "üßπ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã!"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è CI/CD
ci-check: ## –ü—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è CI/CD
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–æ–∫ –¥–ª—è CI/CD..."
	flake8 $(SRC_DIR) --format=json --output-file=flake8-report.json || true
	mypy $(SRC_DIR) --json-report=mypy-report.json || true
	black --check $(SRC_DIR)
	isort --check-only $(SRC_DIR)
	pytest --cov=src --cov-report=xml --cov-fail-under=80
	@echo "‚úÖ CI/CD –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!" 